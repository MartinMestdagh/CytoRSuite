% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gating-functions.R
\name{drawBoundary}
\alias{drawBoundary}
\title{Draw Boundary(s) to Gate Flow Cytometry Populations.}
\usage{
drawBoundary(fr, alias = NULL, channels, plot = TRUE, labels = TRUE,
  ...)
}
\arguments{
\item{fr}{a \code{\link[flowCore:flowFrame-class]{flowFrame}} object
containing the flow cytometry data for plotting and gating.}

\item{alias}{the name(s) of the populations to be gated. Multiple boundary
gates ares not currently supported. \code{alias} is \code{NULL} by default
which will halt the gating routine.}

\item{channels}{vector of channel names to use for plotting, can be of length
1 for 1-D density histogram or length 2 for 2-D scatter plot.}

\item{plot}{logical indicating whether the data should be plotted. This
feature allows for constructing gates of different types over existing
plots which may already contain a different gate type.}

\item{labels}{logical indicating whether to include \code{\link{plotLabels}}
for the gated population(s), \code{TRUE} by default.}

\item{...}{additional arguments for \code{\link{plotCyto,flowFrame-method}}.}
}
\value{
a\code{\link[flowCore:filters-class]{filters}} list containing the
  constructed \code{\link[flowCore:rectangleGate-class]{rectangleGate}}
  object.
}
\description{
\code{drawBoundary} constructs an interactive plotting window for user to
select the upper bound of a population which is constructed into a
\code{\link[flowCore:rectangleGate-class]{rectangleGate}} object and stored
in a \code{\link[flowCore:filters-class]{filters}} list. Both 1-D and 2-D
boundary gates are supported, for 2-D boundary gates all events below the
select x and y coordinates are included in the gate. Multiple boundary gates
ares not currently supported.
}
\examples{
\dontrun{
library(CytoRSuiteData)

# Load in samples to flowSet
fs <- Activation

# Transform fluorescent channels
fs <- transform(fs, estimateLogicle(fs[[4]], getChannels(fs)))

# Extract a flowFrame
fr <- fs[[1]]

# Get 1-D boundary gate using drawBoundary
bg <- drawBoundary(fr, 
                   alias = "Cells",
                   channels = c("PE-A"))

# bg is a filters object - extract rectangleGate using `[[`
bg[[1]]

#' # Get 2-D boundary gate using drawBoundary
tg <- drawBoundary(fr, 
                   alias = "Cells", 
                   channels = c("PE-A", "Alexa Fluor 700-A"))

# bg is a filters object - extract rectangleGate using `[[`
bg[[1]]

}

}
\seealso{
\code{\link{plotCyto1d,flowFrame-method}}

\code{\link{plotCyto2d,flowFrame-method}}

\code{\link{drawGate}}
}
\author{
Dillon Hammill (Dillon.Hammill@anu.edu.au)
}
\keyword{FlowJo,}
\keyword{boundary}
\keyword{draw,}
\keyword{gating,}
\keyword{manual,}
\keyword{openCyto,}
\keyword{rectangleGate,}
